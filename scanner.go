package amf0

import (
	"io"
)

// The scanner is used to iterate over bytes from the reader,
// like the bufio.Scanner class.
type Scanner struct {
	r          io.Reader
	lastErr    error
	lastPacket AmfType
}

func NewScanner(r io.Reader) *Scanner {
	return &Scanner{r: r}
}

// Scan advances the Scanner to the next token, which will then be
// available through the Bytes or Type method. It returns false
// when the scan stops, either by reaching the end of the input
// or an error.
func (s *Scanner) Scan() bool {
	s.lastPacket, s.lastErr = Decode(s.r)
	return s.lastErr == nil
}

// Bytes returns the bytes of the most recent packet generated
// by a call to Scan.
func (s *Scanner) Bytes() []byte {
	return s.lastPacket.EncodeBytes()
}

// Bytes returns the packet generated by a call to Scan.
func (s *Scanner) Type() AmfType {
	return s.lastPacket
}

// Returns an error (or nil) generated by the last scan.
func (s *Scanner) Err() error {
	return s.lastErr
}
